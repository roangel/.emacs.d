;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Adds additional fields to the dictionary of dataframes of a LoggingData object.\"\"\"" code nil nil [1 86])
            ("__author__" variable nil nil [88 115])
            ("__license__" variable nil nil [116 135])
            ("pandas" include nil nil [138 157])
            ("numpy" include nil nil [158 176])
            ("collections" include nil nil [177 211])
            ("contextlib" include nil nil [212 243])
            ("metadata" variable nil nil [246 304])
            ("CustomFields" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [392 413])
                            ("self" variable nil (reparse-symbol indented_block_body) [422 445]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [347 351])
                            ("logging_data" variable nil (reparse-symbol function_parameters) [353 365])
                            ("topic_metadata" variable nil (reparse-symbol function_parameters) [367 381]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [334 446])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [462 466]))                          
                        :documentation "Add custom fields to the df_dict of logging_data object.
        * is added to the names to represent that it was calculated in postprocessing and not logged.
        ")
                        (reparse-symbol indented_block_body) [451 2544])
                    ("update_field" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2566 2570])
                            ("topic" variable nil (reparse-symbol function_parameters) [2572 2577])
                            ("field" variable nil (reparse-symbol function_parameters) [2579 2584])
                            ("data" variable nil (reparse-symbol function_parameters) [2586 2590])
                            ("metadata" variable nil (reparse-symbol function_parameters) [2592 2600]))                          )
                        (reparse-symbol indented_block_body) [2549 2952])
                    ("update_sensor_combined_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3032 3036]))                          )
                        (reparse-symbol indented_block_body) [2999 4377])
                    ("update_vehicle_magnetometer_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4420 4424]))                          )
                        (reparse-symbol indented_block_body) [4382 4950])
                    ("update_raw_magnetometer_topics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4990 4994]))                          )
                        (reparse-symbol indented_block_body) [4955 5482])
                    ("update_battery_status_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5519 5523]))                          )
                        (reparse-symbol indented_block_body) [5487 6288])
                    ("update_bms_data_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6319 6323]))                          )
                        (reparse-symbol indented_block_body) [6293 6697])
                    ("update_sbs_cont_log_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6732 6736]))                          )
                        (reparse-symbol indented_block_body) [6702 7367])
                    ("update_wind_estimate_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7403 7407]))                          )
                        (reparse-symbol indented_block_body) [7372 8376])
                    ("update_vehicle_local_position_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8421 8425]))                          )
                        (reparse-symbol indented_block_body) [8381 10067])
                    ("update_vehicle_local_position_setpoint_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10121 10125]))                          )
                        (reparse-symbol indented_block_body) [10072 11259])
                    ("update_vehicle_global_position_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11305 11309]))                          )
                        (reparse-symbol indented_block_body) [11264 12097])
                    ("update_vehicle_gps_position_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12140 12144]))                          )
                        (reparse-symbol indented_block_body) [12102 13699])
                    ("update_position_setpoint_triplet_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13747 13751]))                          )
                        (reparse-symbol indented_block_body) [13704 13928])
                    ("update_estimator_status_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13967 13971]))                          )
                        (reparse-symbol indented_block_body) [13933 16635])
                    ("update_ekf_innovation_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16672 16676]))                          )
                        (reparse-symbol indented_block_body) [16640 18114])
                    ("update_vehicle_attitude_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18153 18157]))                          )
                        (reparse-symbol indented_block_body) [18119 18239])
                    ("update_vehicle_attitude_groundtruth_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18290 18294]))                          )
                        (reparse-symbol indented_block_body) [18244 18388])
                    ("update_vehicle_attitude_setpoint_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18436 18440]))                          )
                        (reparse-symbol indented_block_body) [18393 18533])
                    ("update_control_state_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18569 18573]))                          )
                        (reparse-symbol indented_block_body) [18538 18652])
                    ("update_estimator_flags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18684 18688]))                          )
                        (reparse-symbol indented_block_body) [18657 19842])
                    ("update_lat_lon_m" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19889 19893])
                            ("topic" variable nil (reparse-symbol function_parameters) [19895 19900])
                            ("lat_field" variable nil (reparse-symbol function_parameters) [19902 19911])
                            ("lon_field" variable nil (reparse-symbol function_parameters) [19913 19922])
                            ("div" variable nil (reparse-symbol function_parameters) [19924 19927]))                          )
                        (reparse-symbol indented_block_body) [19868 21213])
                    ("update_yaw_pitch_roll" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21244 21248])
                            ("topic" variable nil (reparse-symbol function_parameters) [21250 21255])
                            ("base_field" variable nil (reparse-symbol function_parameters) [21257 21267]))                          )
                        (reparse-symbol indented_block_body) [21218 23828])
                    ("update_control_mode_flags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23863 23867])
                            ("topic" variable nil (reparse-symbol function_parameters) [23869 23874])
                            ("control_mode_flags_values" variable nil (reparse-symbol function_parameters) [23876 23901]))                          
                        :documentation "Add bits of control_mode_flags to given topic (estimator_flags*)")
                        (reparse-symbol indented_block_body) [23833 32681])
                    ("update_gps_check_fail_flags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32718 32722])
                            ("topic" variable nil (reparse-symbol function_parameters) [32724 32729])
                            ("gps_check_fail_flags_values" variable nil (reparse-symbol function_parameters) [32731 32758]))                          
                        :documentation "Add bits of gps_check_fail_flags to estimator_flags*")
                        (reparse-symbol indented_block_body) [32686 36555])
                    ("parse_bitmask" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36578 36582])
                            ("values" variable nil (reparse-symbol function_parameters) [36584 36590])
                            ("power" variable nil (reparse-symbol function_parameters) [36592 36597]))                          )
                        (reparse-symbol indented_block_body) [36560 36647])
                    ("get_mag_inclination" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36676 36680])
                            ("topic" variable nil (reparse-symbol function_parameters) [36682 36687])
                            ("state" variable nil (reparse-symbol function_parameters) [36689 36694])
                            ("mag_strength" variable nil (reparse-symbol function_parameters) [36696 36708]))                          )
                        (reparse-symbol indented_block_body) [36652 37063])
                    ("get_time_diff" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37086 37090])
                            ("topic" variable nil (reparse-symbol function_parameters) [37092 37097]))                          )
                        (reparse-symbol indented_block_body) [37068 37282])
                    ("project_xz_to_horizontal_plane" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37322 37326])
                            ("topic" variable nil (reparse-symbol function_parameters) [37328 37333])
                            ("x_field" variable nil (reparse-symbol function_parameters) [37335 37342])
                            ("y_field" variable nil (reparse-symbol function_parameters) [37344 37351])
                            ("yaw_field" variable nil (reparse-symbol function_parameters) [37353 37362]))                          )
                        (reparse-symbol indented_block_body) [37287 37629])
                    ("project_y_to_horizontal_plane" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37668 37672])
                            ("topic" variable nil (reparse-symbol function_parameters) [37674 37679])
                            ("x_field" variable nil (reparse-symbol function_parameters) [37681 37688])
                            ("y_field" variable nil (reparse-symbol function_parameters) [37690 37697])
                            ("yaw_field" variable nil (reparse-symbol function_parameters) [37699 37708]))                          )
                        (reparse-symbol indented_block_body) [37634 37976])
                    ("get_map_projection" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38004 38008])
                            ("lat" variable nil (reparse-symbol function_parameters) [38010 38013])
                            ("lon" variable nil (reparse-symbol function_parameters) [38015 38018])
                            ("anchor_lat" variable nil (reparse-symbol function_parameters) [38020 38030])
                            ("anchor_lon" variable nil (reparse-symbol function_parameters) [38032 38042]))                          
                        :documentation "Function from flight_review (https://github.com/PX4/flight_review/)
        Converts lat, lon in [rad] to x, y in [m] with an anchor position
        ")
                        (reparse-symbol indented_block_body) [37981 39075]))                  
                :type "class")
                nil [307 39075]))          
      :file "custom_fields.py"
      :pointmax 39075
      :fsize 39074
      :lastmodtime '(23901 25717 400593 409000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Provides utility functions\"\"\"" code nil nil [1 33])
            ("__author__" variable nil nil [35 62])
            ("__license__" variable nil nil [63 82])
            ("inop_check" include nil nil [92 109])
            ("custom_fields" include nil nil [117 137])
            ("test_helper" include nil nil [145 163])
            ("keyboard_shortcuts_config" include nil nil [171 203])
            ("style_sheet" include nil nil [211 229])
            ("GithubDownloads" include nil nil [253 275])
            ("XmlDictConfig" include nil nil [294 314])
            ("DictDiffer" include nil nil [333 350])
            ("ParametersMetaData" include nil nil [377 402])
            ("TopicMetaData" include nil nil [424 444])
            ("ThreadWorker" include nil nil [465 484]))          
      :file "__init__.py"
      :pointmax 485
      :fsize 1025
      :lastmodtime '(23901 29133 617221 974000)
      :unmatched-syntax '((FROM 445 . 449) (PERIOD 450 . 451) (FROM 403 . 407) (PERIOD 408 . 409) (FROM 351 . 355) (PERIOD 356 . 357) (FROM 315 . 319) (PERIOD 320 . 321) (FROM 276 . 280) (PERIOD 281 . 282) (FROM 230 . 234) (PERIOD 235 . 236) (FROM 204 . 208) (PERIOD 209 . 210) (FROM 164 . 168) (PERIOD 169 . 170) (FROM 138 . 142) (PERIOD 143 . 144) (FROM 110 . 114) (PERIOD 115 . 116) (FROM 85 . 89) (PERIOD 90 . 91)))
    (semanticdb-table "semanticdb-table"
      :file "inop_check.py"
      :fsize 2542
      :lastmodtime '(23901 25717 400593 409000))
    (semanticdb-table "semanticdb-table"
      :file "style_sheet.py"
      :fsize 1548
      :lastmodtime '(23857 55314 160832 635000))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Defines constants or helper functions used across the package\"\"\"" code nil nil [1 68])
            ("__author__" variable nil nil [70 96])
            ("__license__" variable nil nil [97 116])
            ("sys" include nil nil [118 128])
            ("math" include nil nil [129 140])
            ("re" include nil nil [141 150])
            ("pathlib" include nil nil [151 175])
            ("numpy" include nil nil [176 194])
            ("pandas" include nil nil [195 214])
            ("DEFAULT_VALUE" variable nil nil [216 237])
            ("get_function_name" function nil nil [240 308])
            ("get_component_name_as_prefix" function (:arguments 
              ( ("file_name" variable nil (reparse-symbol function_parameters) [343 352]))              ) nil [310 782])
            ("get_result" function (:arguments 
              ( ("condition" variable nil (reparse-symbol function_parameters) [799 808]))              ) nil [784 860])
            ("rms" function (:arguments 
              ( ("array" variable nil (reparse-symbol function_parameters) [870 875]))              ) nil [862 950])
            ("trim_data_frame" function (:arguments 
              ( ("df" variable nil (reparse-symbol function_parameters) [1066 1068])
                ("sec_from_start" variable nil (reparse-symbol function_parameters) [1070 1084])
                ("sec_from_end" variable nil (reparse-symbol function_parameters) [1086 1098]))              ) nil [1046 1285])
            ("get_std" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1299 1303]))              ) nil [1287 1394])
            ("get_fft" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1408 1412])
                ("fs" variable nil (reparse-symbol function_parameters) [1414 1416]))              ) nil [1396 1633])
            ("get_rms" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1647 1651]))              ) nil [1635 1761])
            ("get_diff" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1776 1780]))              ) nil [1763 1889])
            ("get_mean_perc" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1909 1913]))              ) nil [1891 1982])
            ("get_mean" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [1997 2001]))              ) nil [1984 2093])
            ("get_absolute_mean" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2117 2121]))              ) nil [2095 2219])
            ("get_rolling_median_mean" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2249 2253])
                ("window" variable nil (reparse-symbol function_parameters) [2255 2261]))              ) nil [2221 2436])
            ("get_absolute_max" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2459 2463]))              ) nil [2438 2560])
            ("get_max" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2574 2578]))              ) nil [2562 2669])
            ("test_flag" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2738 2742]))              ) nil [2724 2849])
            ("get_test_ratio" function (:arguments 
              ( ("innovation" variable nil (reparse-symbol function_parameters) [2870 2880])
                ("innovation_variance" variable nil (reparse-symbol function_parameters) [2882 2901])
                ("innovation_gate" variable nil (reparse-symbol function_parameters) [2903 2918])
                ("filter_window" variable nil (reparse-symbol function_parameters) [2920 2933]))              ) nil [2851 3250])
            ("update_segment_with_indi_data" function
               (:documentation "Update hover segment with the moment INDI starts (except first hover) or ends (only last hover)

    :param offset: Time offset (s) after INDI starts or before INDI ends
    :param option: 'forward' option: If hover segments contain active INDI session,
                take INDI starting point as the beginning of segment. 
                Else, consider full segment as usual.
                Offset is only taken into account for hover segments after first BT,
                not before FT. 
                The end of the updated segment is always the end of the hover segment.
                'backward' option: If hover segments contain active INDI session,
                take INDI ending point of the last transition (before landing) as the end of segment.
                Else, consider full segment as usual.
                The beginning of the updated segment is always the beginning of the hover segment.
    "
                :arguments 
                  ( ("indi_data" variable nil (reparse-symbol function_parameters) [3286 3295])
                    ("hover_data_segments" variable nil (reparse-symbol function_parameters) [3297 3316])
                    ("offset" variable nil (reparse-symbol function_parameters) [3318 3324])
                    ("option" variable nil (reparse-symbol function_parameters) [3331 3337]))                  )
                nil [3252 5668])
            ("get_indi_active_indices" function (:arguments 
              ( ("indi_data" variable nil (reparse-symbol function_parameters) [5698 5707]))              ) nil [5670 6140])
            ("get_extended_transition_data" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [6237 6241])
                ("logging_data" variable nil (reparse-symbol function_parameters) [6243 6255]))              ) nil [6204 7451])
            ("check_messages" function (:arguments 
              ( ("regexp" variable nil (reparse-symbol function_parameters) [7472 7478])
                ("messages" variable nil (reparse-symbol function_parameters) [7480 7488]))              ) nil [7453 7642]))          
      :file "test_helper.py"
      :pointmax 7642
      :fsize 7641
      :lastmodtime '(23901 29133 617221 974000)
      :unmatched-syntax '((RETURN 2379 . 2385) (IF 2392 . 2394) (ELSE 2417 . 2421) (RETURN 815 . 821) (IF 831 . 833) (ELSE 844 . 848)))
    (semanticdb-table "semanticdb-table"
      :file "keyboard_shortcuts_config.py"
      :fsize 2728
      :lastmodtime '(23816 61984 952352 686000))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Provides ParameterMetaData class to handle parameter metadata\"\"\"" code nil nil [1 68])
            ("__author__" variable nil nil [70 124])
            ("__license__" variable nil nil [125 144])
            ("fnmatch" include nil nil [146 160])
            ("sys" include nil nil [161 171])
            ("os" include nil nil [172 181])
            ("re" include nil nil [182 191])
            ("json" include nil nil [192 203])
            ("logging" include nil nil [204 218])
            ("collections" include nil nil [219 253])
            ("xml.etree" include nil nil [254 287])
            ("pathlib" include nil nil [288 312])
            ("src.utilities" include nil nil [314 382])
            ("logger" variable nil nil [384 443])
            ("ParametersMetaData" type
               (:members 
                  ( ("factory_params" variable nil (reparse-symbol indented_block_body) [551 1609])
                    ("adaptive_params" variable nil (reparse-symbol indented_block_body) [1615 2564])
                    ("__init__" function
                       (:suite 
                          ( ("self, self, self" code nil (reparse-symbol indented_block_body) [2622 2697])
                            ("sw_version" variable nil (reparse-symbol indented_block_body) [2706 2750])
                            ("hw_version" variable nil (reparse-symbol indented_block_body) [2759 2807])
                            ("self" variable nil (reparse-symbol indented_block_body) [2816 2849]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2583 2587])
                            ("sw_version" variable nil (reparse-symbol function_parameters) [2589 2599])
                            ("hw_version" variable nil (reparse-symbol function_parameters) [2601 2611]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2570 3486])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3506 3510]))                          )
                        (reparse-symbol indented_block_body) [3491 3705])
                    ("get_sw_version" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3729 3733])
                            ("sw_version" variable nil (reparse-symbol function_parameters) [3735 3745]))                          
                        :documentation "Gets the alias for certain SW versions")
                        (reparse-symbol indented_block_body) [3710 4062])
                    ("get_hw_version_key" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4090 4094])
                            ("hw_version" variable nil (reparse-symbol function_parameters) [4096 4106]))                          )
                        (reparse-symbol indented_block_body) [4067 4198])
                    ("get_metadata_file" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4225 4229])
                            ("sw_version" variable nil (reparse-symbol function_parameters) [4231 4241])
                            ("hw_version" variable nil (reparse-symbol function_parameters) [4243 4253]))                          )
                        (reparse-symbol indented_block_body) [4203 6756])
                    ("get_default_file" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6782 6786])
                            ("hw_version" variable nil (reparse-symbol function_parameters) [6788 6798]))                          )
                        (reparse-symbol indented_block_body) [6761 7422])
                    ("get_resources_dir" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7449 7453]))                          )
                        (reparse-symbol indented_block_body) [7427 7566])
                    ("get_metadata_for_param" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7598 7602])
                            ("name" variable nil (reparse-symbol function_parameters) [7604 7608]))                          )
                        (reparse-symbol indented_block_body) [7571 8625])
                    ("get_stable_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8652 8656]))                          )
                        (reparse-symbol indented_block_body) [8630 9233])
                    ("get_param_diff" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9257 9261])
                            ("primary_parameters" variable nil (reparse-symbol function_parameters) [9263 9281])
                            ("secondary_parameters" variable nil (reparse-symbol function_parameters) [9283 9303])
                            ("filter_factory_parameters" variable nil (reparse-symbol function_parameters) [9333 9358])
                            ("filter_adaptive_parameters" variable nil (reparse-symbol function_parameters) [9366 9392]))                          )
                        (reparse-symbol indented_block_body) [9238 10567])
                    ("filter_factory_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10602 10606])
                            ("parameters" variable nil (reparse-symbol function_parameters) [10608 10618]))                          )
                        (reparse-symbol indented_block_body) [10572 10929])
                    ("filter_adaptive_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10965 10969])
                            ("parameters" variable nil (reparse-symbol function_parameters) [10971 10981]))                          )
                        (reparse-symbol indented_block_body) [10934 11293]))                  
                :type "class")
                nil [446 11293]))          
      :file "parameters_metadata.py"
      :pointmax 11293
      :fsize 11292
      :lastmodtime '(23901 29133 617221 974000)
      :unmatched-syntax '((RETURN 4117 . 4123) (IF 4135 . 4137) (ELSE 4158 . 4162) (INDENT_BLOCK 3315 . 3486) (NEWLINE 3314 . 3315) (COLON 3313 . 3314) (TRY 2858 . 2861) (AS 3308 . 3310))))
  :file "!home!angel!src!WingtraExplorer!src!utilities!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

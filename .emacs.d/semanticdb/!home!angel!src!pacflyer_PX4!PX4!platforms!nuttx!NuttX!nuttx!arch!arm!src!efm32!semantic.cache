;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__ARCH_ARM_SRC_EFM32_EFM32_DMA_H" variable (:constant-flag t) nil [1871 1903])
            ("nuttx/config.h" include (:system-flag t) nil [2097 2122])
            ("sys/types.h" include (:system-flag t) nil [2124 2146])
            ("stdint.h" include (:system-flag t) nil [2147 2166])
            ("stdbool.h" include (:system-flag t) nil [2167 2187])
            ("chip.h" include nil nil [2189 2206])
            ("chip/efm32_dma.h" include nil nil [2207 2234])
            ("EFM32_DMA_SIGSEL_SHIFT" variable (:constant-flag t) nil [2774 2796])
            ("EFM32_DMA_SIGSEL_MASK" variable (:constant-flag t) nil [2863 2884])
            ("EFM32_DMA_SIGSEL" variable (:constant-flag t) nil [2937 2953])
            ("EFM32_DMA_SOURCSEL_SHIFT" variable (:constant-flag t) nil [3023 3047])
            ("EFM32_DMA_SOURCSEL_MASK" variable (:constant-flag t) nil [3116 3139])
            ("EFM32_DMA_SOURCSEL" variable (:constant-flag t) nil [3192 3210])
            ("EFM32_DMA_XFERSIZE_SHIFT" variable (:constant-flag t) nil [3280 3304])
            ("EFM32_DMA_XFERSIZE_MASK" variable (:constant-flag t) nil [3363 3386])
            ("EFM32_DMA_XFERSIZE_BYTE" variable (:constant-flag t) nil [3438 3461])
            ("EFM32_DMA_XFERSIZE_HWORD" variable (:constant-flag t) nil [3511 3535])
            ("EFM32_DMA_XFERSIZE_WORD" variable (:constant-flag t) nil [3584 3607])
            ("EFM32_DMA_SINGLE_MASK" variable (:constant-flag t) nil [3656 3677])
            ("EFM32_DMA_SINGLE" variable (:constant-flag t) nil [3753 3769])
            ("EFM32_DMA_BUFFER_FULL" variable (:constant-flag t) nil [3840 3861])
            ("EFM32_DMA_MEMINCR_MASK" variable (:constant-flag t) nil [3926 3948])
            ("EFM32_DMA_MEMINCR" variable (:constant-flag t) nil [4018 4035])
            ("EFM32_DMA_NOINCR" variable (:constant-flag t) nil [4110 4126])
            ("DMA_HANDLE" variable
               (:pointer 1
                :type "void")
                nil [4498 4515])
            ("dma_callback_t" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4975 4993])
                    ("status" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4994 5009])
                    ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [5010 5020]))                  
                :type "void")
                nil [4952 5021])
            ("dma_config_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [6642 6672])
            ("EXTERN" variable (:constant-flag t) nil [6932 6938])
            ("efm32_dmadump" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [11997 12010])
            ("efm32_dmasample" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [11465 11480])
            ("efm32_dmastop" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11004 11022]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [10985 11023])
            ("efm32_dmastart" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10474 10492])
                    ("callback" variable (:type ("dma_callback_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10493 10517])
                    ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [10518 10528]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [10454 10529])
            ("efm32_txdmasetup" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9998 10016])
                    ("paddr" variable (:type ("uintptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10017 10033])
                    ("maddr" variable (:type ("uintptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10034 10050])
                    ("nbytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10073 10087])
                    ("config" variable (:type ("dma_config_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10088 10108]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9976 10109])
            ("efm32_rxdmasetup" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9295 9313])
                    ("paddr" variable (:type ("uintptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9314 9330])
                    ("maddr" variable (:type ("uintptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9331 9347])
                    ("nbytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9370 9384])
                    ("config" variable (:type ("dma_config_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9385 9405]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9273 9406])
            ("efm32_dmafree" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("handle" variable (:type ("DMA_HANDLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8680 8698]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8661 8699])
            ("efm32_dmachannel" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("DMA_HANDLE" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7953 7958]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7925 7959]))          
      :file "efm32_dma.h"
      :pointmax 12157
      :fsize 12156
      :lastmodtime '(23770 54121 451239 243000)
      :unmatched-syntax '((TYPEDEF 4944 . 4951) (symbol 4494 . 4497) (TYPEDEF 4486 . 4493))
      :lexical-table 
        '(("EFM32_DMA_SIGSEL_MASK" . ((semantic-list "(15 << EFM32_DMA_SIGSEL_SHIFT)" 2896 . 2926)))
          ("efm32_dmadump" (spp-arg-list ("handle" "regs" "msg") 12010 . 12027))
          ("EFM32_DMA_XFERSIZE_BYTE" . ((semantic-list "(0 << EFM32_DMA_SOURCSEL_SHIFT)" 3469 . 3500)))
          ("EFM32_DMA_XFERSIZE_HWORD" . ((semantic-list "(1 << EFM32_DMA_SOURCSEL_SHIFT)" 3542 . 3573)))
          ("EFM32_DMA_MEMINCR" . ((semantic-list "(1 << 13)" 4049 . 4058)))
          ("EFM32_DMA_SIGSEL" (spp-arg-list ("n") 2953 . 2956) . ((semantic-list "((dma_config_t)(n) << EFM32_DMA_SIGSEL_SHIFT)" 2968 . 3013)))
          ("EFM32_DMA_XFERSIZE_WORD" . ((semantic-list "(2 << EFM32_DMA_SOURCSEL_SHIFT)" 3615 . 3646)))
          ("EFM32_DMA_BUFFER_FULL" . ((semantic-list "(0)" 3871 . 3874)))
          ("efm32_dmasample" (spp-arg-list ("handle" "regs") 11480 . 11493))
          ("EFM32_DMA_SOURCSEL_MASK" . ((semantic-list "(63 << EFM32_DMA_SOURCSEL_SHIFT)" 3149 . 3181)))
          ("EFM32_DMA_XFERSIZE_MASK" . ((semantic-list "(3 << EFM32_DMA_XFERSIZE_SHIFT)" 3396 . 3427)))
          ("EFM32_DMA_SINGLE" . ((semantic-list "(1 << 12)" 3784 . 3793)))
          ("EFM32_DMA_SOURCSEL" (spp-arg-list ("n") 3210 . 3213) . ((semantic-list "((dma_config_t)(n) << EFM32_DMA_SOURCSEL_SHIFT)" 3223 . 3270)))
          ("EFM32_DMA_MEMINCR_MASK" . ((semantic-list "(1 << 13)" 3959 . 3968)))
          ("EFM32_DMA_SOURCSEL_SHIFT" . ((semantic-list "(4)" 3056 . 3059)))
          ("EFM32_DMA_XFERSIZE_SHIFT" . ((semantic-list "(10)" 3313 . 3317)))
          ("EFM32_DMA_SINGLE_MASK" . ((semantic-list "(1 << 12)" 3689 . 3698)))
          ("__ARCH_ARM_SRC_EFM32_EFM32_DMA_H")
          ("EFM32_DMA_SIGSEL_SHIFT" . ((semantic-list "(0)" 2807 . 2810)))
          ("EFM32_DMA_NOINCR" . ((semantic-list "(0)" 4141 . 4144)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "chip.h"
      :fsize 2937
      :lastmodtime '(23770 54121 439239 175000))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__ARCH_ARM_SRC_EFM32_EFM32_ADC_H" variable (:constant-flag t) nil [1871 1903])
            ("nuttx/config.h" include (:system-flag t) nil [2097 2122])
            ("chip.h" include nil nil [2124 2141])
            ("chip/efm32_adc.h" include nil nil [2143 2170])
            ("nuttx/analog/adc.h" include (:system-flag t) nil [2172 2201]))          
      :file "efm32_adc.h"
      :pointmax 21825
      :fsize 21824
      :lastmodtime '(23770 54121 451239 243000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__ARCH_ARM_SRC_EFM32_EFM32_ADC_H")
          )
))
  :file "!home!angel!src!pacflyer_PX4!PX4!platforms!nuttx!NuttX!nuttx!arch!arm!src!efm32!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

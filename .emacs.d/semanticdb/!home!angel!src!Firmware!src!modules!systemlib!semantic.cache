;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_AUTOSTART" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2031 2045]))                  
                :type "int")
                nil [2012 2049])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_AUTOCONFIG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2380 2395]))                  
                :type "int")
                nil [2361 2399])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_HITL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2680 2689]))                  
                :type "int")
                nil [2661 2693])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_RESTART_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2983 3000]))                  
                :type "int")
                nil [2964 3004])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_MC_EST_GROUP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3278 3295]))                  
                :type "int")
                nil [3259 3299])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_COMPANION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4466 4480]))                  
                :type "int")
                nil [4447 4484])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_PARAM_VER" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4787 4801]))                  
                :type "int")
                nil [4768 4805])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_STCK_EN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4891 4903]))                  
                :type "int")
                nil [4872 4907])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_GYRO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5251 5264]))                  
                :type "int")
                nil [5232 5268])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_ACCEL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5616 5630]))                  
                :type "int")
                nil [5597 5634])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_BARO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5978 5991]))                  
                :type "int")
                nil [5959 5995])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_TDEL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6492 6505]))                  
                :type "int")
                nil [6473 6510])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_TMIN" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6757 6770]))                  
                :type "int")
                nil [6738 6774])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_CAL_TMAX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7018 7031]))                  
                :type "int")
                nil [6999 7036])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_HAS_MAG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7341 7353]))                  
                :type "int")
                nil [7322 7357])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_HAS_BARO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7677 7690]))                  
                :type "int")
                nil [7658 7694])
            ("PARAM_DEFINE_INT32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYS_BL_UPDATE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8276 8290]))                  
                :type "int")
                nil [8257 8294]))          
      :file "system_params.c"
      :pointmax 8295
      :fsize 8294
      :lastmodtime '(23676 64895 350039 234000)
      :unmatched-syntax '((number 8291 . 8292) (number 7691 . 7692) (number 7354 . 7355) (number 7032 . 7034) (number 6771 . 6772) (number 6506 . 6508) (number 5992 . 5993) (number 5631 . 5632) (number 5265 . 5266) (number 4904 . 4905) (number 4802 . 4803) (number 4481 . 4482) (number 3296 . 3297) (number 3001 . 3002) (number 2690 . 2691) (number 2396 . 2397) (number 2046 . 2047))))
  :file "!home!angel!src!Firmware!src!modules!systemlib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

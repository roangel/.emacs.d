;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Provides LoggindData and LoggingDataHelper class that stores time series information about all logged variables
as well as additional calculated variables
\"\"\"" code nil nil [1 162])
            ("__author__" variable nil nil [164 204])
            ("__license__" variable nil nil [205 224])
            ("pandas" include nil nil [227 246])
            ("time" include nil nil [247 258])
            ("contextlib" include nil nil [259 290])
            ("copy" include nil nil [291 316])
            ("LoggingData" type
               (:members 
                  ( ("VEHICLE_STATUS_TOPIC" variable nil (reparse-symbol indented_block_body) [344 385])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [445 466])
                            ("for" code nil (reparse-symbol indented_block_body) [476 815])
                            ("helper_info" variable nil (reparse-symbol indented_block_body) [824 878])
                            ("helper_info" variable nil (reparse-symbol indented_block_body) [887 952])
                            ("forward_transition_lines, back_transition_lines" code nil (reparse-symbol indented_block_body) [962 1039])
                            ("helper_info" variable nil (reparse-symbol indented_block_body) [1048 1098])
                            ("helper_info" variable nil (reparse-symbol indented_block_body) [1107 1154])
                            ("self" variable nil (reparse-symbol indented_block_body) [1164 1208]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [404 408])
                            ("data_list" variable nil (reparse-symbol function_parameters) [410 419])
                            ("helper_info" variable nil (reparse-symbol function_parameters) [421 434]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [391 1209])
                    ("get_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1227 1231])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [1233 1243])
                            ("field_name" variable nil (reparse-symbol function_parameters) [1245 1255]))                          )
                        (reparse-symbol indented_block_body) [1214 1518])
                    ("get_cruise_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1543 1547])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [1549 1559])
                            ("field_name" variable nil (reparse-symbol function_parameters) [1561 1571]))                          )
                        (reparse-symbol indented_block_body) [1523 2259])
                    ("get_hover_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2283 2287])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [2289 2299])
                            ("field_name" variable nil (reparse-symbol function_parameters) [2301 2311]))                          )
                        (reparse-symbol indented_block_body) [2264 3340])
                    ("get_armed_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3364 3368])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [3370 3380])
                            ("field_name" variable nil (reparse-symbol function_parameters) [3382 3392]))                          )
                        (reparse-symbol indented_block_body) [3345 3698])
                    ("remove_non_armed_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3729 3733]))                          )
                        (reparse-symbol indented_block_body) [3703 4000])
                    ("get_arming_interval" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4029 4033]))                          )
                        (reparse-symbol indented_block_body) [4005 4409])
                    ("get_arming_interval_in_utc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4445 4449]))                          )
                        (reparse-symbol indented_block_body) [4414 4696])
                    ("get_common_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4721 4725])
                            ("topic1" variable nil (reparse-symbol function_parameters) [4727 4733])
                            ("topic2" variable nil (reparse-symbol function_parameters) [4735 4741])
                            ("field1" variable nil (reparse-symbol function_parameters) [4743 4749])
                            ("field2" variable nil (reparse-symbol function_parameters) [4756 4762]))                          
                        :documentation "Given fields from 2 different topics with potentially different indices (timestamps), return a common dataframe
        with resampled data. Example:
        Input: topic1 = a, field1 = ['col3', 'col4'], topic2 = b, field2 = ['col1', 'col2']

        a                       b
                col3  col4          col1 col2
        1.5     4     1         1   3    2
        2.5     5     6         2   4    1
        3.5     6     3         3   5    6
        7.5     8     7         4   6    3
        9.5     9     8         8   8    7
                                9   9    8

        Returns:
              col3  col4  col1  col2
        1.0   NaN   NaN   3.0   2.0
        1.5   4.0   1.0   3.0   2.0
        2.0   4.0   1.0   4.0   1.0
        2.5   5.0   6.0   4.0   1.0
        3.0   5.0   6.0   5.0   6.0
        3.5   6.0   3.0   5.0   6.0
        4.0   6.0   3.0   6.0   3.0
        7.5   8.0   7.0   6.0   3.0
        8.0   8.0   7.0   8.0   7.0
        9.0   8.0   7.0   9.0   8.0
        9.5   9.0   8.0   9.0   8.0

        Note: if there are duplicate names in the two topics, e.g. 'landed' field is present in both
        mpc_debug and vehicle_land_detected, then the returned dataframe will have the columns named thus:
        Input: topic1='mpc_debug', field1='landed', topic2='vehicle_land_detected', field2='landed'
        Returns:
            landed_0 landed_1
        ... ...      ...
        ... ...      ...
        ")
                        (reparse-symbol indented_block_body) [4701 6578])
                    ("get_transition_lines" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6608 6612]))                          )
                        (reparse-symbol indented_block_body) [6583 7412]))                  
                :type "class")
                nil [319 7412])
            ("LoggingDataHelper" type
               (:members 
                  ( ("STRING_DEFAULT" variable nil (reparse-symbol indented_block_body) [7445 7467])
                    ("DICT_DEFAULT" variable nil (reparse-symbol indented_block_body) [7472 7489])
                    ("LIST_DEFAULT" variable nil (reparse-symbol indented_block_body) [7494 7511])
                    ("TUPLE_DEFAULT" variable nil (reparse-symbol indented_block_body) [7516 7538])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [7580 7653])
                            ("self" variable nil (reparse-symbol indented_block_body) [7662 7725])
                            ("self" variable nil (reparse-symbol indented_block_body) [7734 7799])
                            ("self" code nil (reparse-symbol indented_block_body) [7808 7874])
                            ("self" variable nil (reparse-symbol indented_block_body) [7883 7945])
                            ("self" code nil (reparse-symbol indented_block_body) [7954 8027])
                            ("self" variable nil (reparse-symbol indented_block_body) [8036 8113])
                            ("self" variable nil (reparse-symbol indented_block_body) [8122 8199])
                            ("self" variable nil (reparse-symbol indented_block_body) [8208 8281])
                            ("self" variable nil (reparse-symbol indented_block_body) [8290 8360])
                            ("self" variable nil (reparse-symbol indented_block_body) [8369 8426])
                            ("self" variable nil (reparse-symbol indented_block_body) [8436 8516])
                            ("self" variable nil (reparse-symbol indented_block_body) [8525 8607])
                            ("self" variable nil (reparse-symbol indented_block_body) [8616 8790])
                            ("True" code nil (reparse-symbol indented_block_body) [8884 8888]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7557 7561])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [7563 7569]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7544 8889])
                    ("set_start_time" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8913 8917])
                            ("start_time" variable nil (reparse-symbol function_parameters) [8919 8929]))                          )
                        (reparse-symbol indented_block_body) [8894 9157])
                    ("set_armed_area_utc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9185 9189])
                            ("armed_area_utc" variable nil (reparse-symbol function_parameters) [9191 9205]))                          )
                        (reparse-symbol indented_block_body) [9162 9315])
                    ("get_utc_time" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9337 9341])
                            ("time_in_usec" variable nil (reparse-symbol function_parameters) [9343 9355]))                          )
                        (reparse-symbol indented_block_body) [9320 9447]))                  
                :type "class")
                nil [7414 9447]))          
      :file "logging_data.py"
      :pointmax 9447
      :fsize 9446
      :lastmodtime '(23774 49548 344741 61000)
      :unmatched-syntax '((NAME 8799 . 8803) (IF 8830 . 8832) (ELSE 8879 . 8883) (RETURN 4591 . 4597) (IF 4617 . 4619) (ELSE 4641 . 4645) (RETURN 4329 . 4335) (IF 4355 . 4357) (ELSE 4370 . 4374))))
  :file "!home!angel!src!WingtraExplorer!src!data_containers!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

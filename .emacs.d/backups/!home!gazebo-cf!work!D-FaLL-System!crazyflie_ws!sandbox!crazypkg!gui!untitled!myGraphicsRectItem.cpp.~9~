#include "myGraphicsRectItem.h"

#include <QGraphicsSceneMouseEvent>
#include <QGraphicsRectItem>
#include <QPen>
#include <QBrush>
#include <QApplication>
#include <QVariant>

myGraphicsRectItem::myGraphicsRectItem(const QRectF & rect, QGraphicsItem * parent)
    : QGraphicsRectItem(rect, parent)
{
    this->setFlag(QGraphicsItem::ItemIsSelectable);
    this->setFlag(QGraphicsItem::ItemIsMovable);
    pen = new QPen(Qt::red);
    brush = new QBrush(Qt::red);

    tmp_rect = 0;
    // firstClick = true;
}


QVariant myGraphicsRectItem::itemChange(GraphicsItemChange change, const QVariant &value)
{
    if (change == QGraphicsItem::ItemSelectedChange)
    {
        if (value == true)
        {
            qDebug("selected!");

            _corners[0] = new CornerGrabber(this,0);
            _corners[1] = new CornerGrabber(this,1);
            _corners[2] = new CornerGrabber(this,2);
            _corners[3] = new CornerGrabber(this,3);


            _corners[0]->installSceneEventFilter(this);
            _corners[1]->installSceneEventFilter(this);
            _corners[2]->installSceneEventFilter(this);
            _corners[3]->installSceneEventFilter(this);

            setCornerPositions();

        }
        else
        {
            qDebug("unselected!");
            _corners[0]->setParentItem(NULL);
            _corners[1]->setParentItem(NULL);
            _corners[2]->setParentItem(NULL);
            _corners[3]->setParentItem(NULL);

            delete _corners[0];
            delete _corners[1];
            delete _corners[2];
            delete _corners[3];
        }
    }

    return QGraphicsItem::itemChange(change, value);
}

void myGraphicsRectItem::setCornerPositions()
{
    QRectF rect = this->rect();

    _corners[0]->setPos(rect.bottomLeft().x(), rect.bottomLeft().y() + _corners[0]->getHeight());
    _corners[1]->setPos(rect.topLeft().x(), rect.topLeft().y());
    _corners[2]->setPos(rect.topRight().x(), rect.topRight().y());
    _corners[3]->setPos(rect.bottomRight().x(), rect.topRight().y());
}


void myGraphicsRectItem::mousePressEvent(QGraphicsSceneMouseEvent *mouseEvent)
{
    if (mouseEvent->button() != Qt::LeftButton)
        return;
    // TODO: check if over handlers, if, resize mode
    QGraphicsRectItem::mousePressEvent(mouseEvent);
}

void myGraphicsRectItem::mouseMoveEvent(QGraphicsSceneMouseEvent *mouseEvent)
{
    this->prepareGeometryChange();
    QGraphicsRectItem::mouseMoveEvent(mouseEvent);
}

void myGraphicsRectItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *mouseEvent)
{

    if (mouseEvent->button() != Qt::LeftButton)
        return;
    // TODO: stop resize mode
    QGraphicsRectItem::mouseReleaseEvent(mouseEvent);
}
